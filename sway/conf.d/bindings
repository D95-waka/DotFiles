## sway hotkey configuration

#set $up Up
#set $down Down
#set $left Left
#set $right Right


floating_modifier $mod

# resize window (you can also use the mouse for that)
mode "resize" bindsym {
	$left       resize shrink width 5 px
	$down       resize grow height 5 px
	$up         resize shrink height 5 px
	$right      resize grow width 5 px

	Return mode "default"
	Escape mode "default"
	$mod+r mode "default"
}

bindsym --to-code {

$mod+grave exec \
	$TERMINAL

$mod+w kill

$mod+r exec \
	wofi --show drun

$mod+e exec \
	'exec $HOME/.config/scripts/binding_cli.sh bemenu_locate'

Ctrl+grave exec \
	'copyq show'

# change focus
$mod+$left focus left
$mod+$down focus down
$mod+$up focus up
$mod+$right focus right

# move focused window
$mod+Shift+$left move left
$mod+Shift+$down move down
$mod+Shift+$up move up
$mod+Shift+$right move right

# enter fullscreen mode for the focused container
$mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#$mod+s layout stacking
$mod+b layout tabbed
$mod+g layout toggle split
$mod+v split v

# toggle tiling / floating
$mod+Shift+o floating toggle

# change focus between tiling / floating windows
$mod+o focus mode_toggle

# focus the parent container
$mod+a focus parent

# focus the child container
$mod+d focus child

# move the currently focused window to the scratchpad
$mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
$mod+minus scratchpad show

# switch to workspace
$mod+1 workspace $ws1
$mod+2 workspace $ws2
$mod+3 workspace $ws3
$mod+4 workspace $ws4
$mod+5 workspace $ws5
$mod+6 workspace $ws6
$mod+7 workspace $ws7
$mod+8 workspace $ws8
$mod+9 workspace $ws9
$mod+0 workspace $ws10

# move focused container to workspace
$mod+Shift+1 move container to workspace $ws1
$mod+Shift+2 move container to workspace $ws2
$mod+Shift+3 move container to workspace $ws3
$mod+Shift+4 move container to workspace $ws4
$mod+Shift+5 move container to workspace $ws5
$mod+Shift+6 move container to workspace $ws6
$mod+Shift+7 move container to workspace $ws7
$mod+Shift+8 move container to workspace $ws8
$mod+Shift+9 move container to workspace $ws9
$mod+Shift+0 move container to workspace $ws10

$mod+Tab workspace next
$mod+Shift+Tab workspace prev

# reload the configuration file
$mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
$mod+Shift+r restart

$mod+t mode "resize"

$mod+n exec \
	makoctl dismiss

$mod+Shift+n exec \
	makoctl dismiss --all

# Volume keys

XF86AudioLowerVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "	$(amixer sset Master 5%- | \
	awk '$2 == "Left:" { gsub(/\[|\]/, "", $5); print $5; }')"

XF86AudioRaiseVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "	$(amixer sset Master 5%+ | \
	awk '$2 == "Left:" { gsub(/\[|\]/, "", $5); print $5; }')"

XF86AudioMute exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "$(amixer sset Master toggle | \
	awk '$2 == "Left:" { if ($6 == "[off]") printf ""; else printf "" }')"

Shift+XF86AudioLowerVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰢳	$(amixer sset Capture 5%- | \
	awk '$2 == "Left:" { gsub(/\[|\]/, "", $5); print $5; }')"

Shift+XF86AudioRaiseVolume exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰢴	$(amixer sset Capture 5%+ | \
	awk '$2 == "Left:" { gsub(/\[|\]/, "", $5); print $5; }')"

# Mic mute
$mod+m exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "$(amixer sset Capture toggle | \
	awk '$2 == "Left:" { if ($6 == "[off]") printf "󰍭"; else printf "󰍬" }')"

# player controllers
XF86AudioPlay exec \
	'export MPD_HOST="master@$HOME/.mpd/socket"; \
	mpc toggle; \
	mpc sendmessage event_bump toggle'

XF86AudioStop exec \
	'export MPD_HOST="master@$HOME/.mpd/socket"; \
	mpc stop; \
	mpc sendmessage event_bump stop'

XF86AudioNext exec \
	'export MPD_HOST="master@$HOME/.mpd/socket"; \
	mpc next; \
	mpc sendmessage event_bump next'

XF86AudioPrev exec \
	'export MPD_HOST="master@$HOME/.mpd/socket"; \
	mpc prev; \
	mpc sendmessage event_bump prev'

XF86TouchpadToggle exec \
	swaymsg input type:touchpad events toggle | \
	notify-send -h string:x-dunst-stack-tag:binds -t 3000 "$(swaymsg -t get_inputs | \
		jq -r '.[0].libinput.send_events | \
		if . == \"enabled\" then "󰍽" else (if . == "disabled" then "󰍾" else "󰎀" end) end')"

$mod+c exec \
	'$HOME/.config/sway/lock.sh capture blur lock clean suspend'

#Capture options
Shift+Print exec \
	'$HOME/.config/scripts/binding_cli.sh screen_capture selection'

$mod+Print exec \
	'$HOME/.config/scripts/binding_cli.sh screen_capture region'

Print exec \
	'$HOME/.config/scripts/binding_cli.sh screen_capture screen'

#Change to next language.
$mod+space exec \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 \
		"󰗊	$(swaymsg -t get_inputs -r | jq '.[1].xkb_active_layout_name' -r | sed 's/ .*$//')"

#Brightness controllers
XF86MonBrightnessUp exec \
	light -A 5% | \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰃟	$(light -g | sed 's/\..*//')%"

XF86MonBrightnessDown exec \
	light -U 5% | \
	notify-send -h string:x-dunst-stack-tag:binds -t 500 "󰃟	$(light -g | sed 's/\..*//')%"

XF86ScreenSaver exec \
	sh -c 'if [[ "$(light)" == "0.00" ]]; then light -I; else light -O; light -S 0; fi'

}

# vim: set syntax=sh
